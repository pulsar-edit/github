"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BareUserMentionTooltipContainer = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactRelay = require("react-relay");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _octicon = _interopRequireDefault(require("../atom/octicon"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
class BareUserMentionTooltipContainer extends _react.default.Component {
  render() {
    const owner = this.props.repositoryOwner;
    const {
      login,
      company,
      repositories,
      membersWithRole
    } = owner;
    return _react.default.createElement("div", {
      className: "github-UserMentionTooltip"
    }, _react.default.createElement("div", {
      className: "github-UserMentionTooltip-avatar"
    }, _react.default.createElement("img", {
      alt: "repository owner's avatar",
      src: owner.avatarUrl
    })), _react.default.createElement("div", {
      className: "github-UserMentionTooltip-info"
    }, _react.default.createElement("div", {
      className: "github-UserMentionTooltip-info-username"
    }, _react.default.createElement(_octicon.default, {
      icon: "mention"
    }), _react.default.createElement("strong", null, login)), company && _react.default.createElement("div", null, _react.default.createElement(_octicon.default, {
      icon: "briefcase"
    }), _react.default.createElement("span", null, company)), membersWithRole && _react.default.createElement("div", null, _react.default.createElement(_octicon.default, {
      icon: "organization"
    }), _react.default.createElement("span", null, membersWithRole.totalCount, " members")), _react.default.createElement("div", null, _react.default.createElement(_octicon.default, {
      icon: "repo"
    }), _react.default.createElement("span", null, repositories.totalCount, " repositories"))), _react.default.createElement("div", {
      style: {
        clear: 'both'
      }
    }));
  }
}
exports.BareUserMentionTooltipContainer = BareUserMentionTooltipContainer;
_defineProperty(BareUserMentionTooltipContainer, "propTypes", {
  repositoryOwner: _propTypes.default.shape({
    login: _propTypes.default.string.isRequired,
    avatarUrl: _propTypes.default.string.isRequired,
    repositories: _propTypes.default.shape({
      totalCount: _propTypes.default.number.isRequired
    }).isRequired,
    // Users
    company: _propTypes.default.string,
    // Organizations
    membersWithRole: _propTypes.default.shape({
      totalCount: _propTypes.default.number.isRequired
    })
  }).isRequired
});
var _default = (0, _reactRelay.createFragmentContainer)(BareUserMentionTooltipContainer, {
  repositoryOwner: function () {
    const node = require("./__generated__/userMentionTooltipContainer_repositoryOwner.graphql");
    if (node.hash && node.hash !== "3ee858460adcfbee1dfc27cf8dc46332") {
      console.error("The definition of 'userMentionTooltipContainer_repositoryOwner' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.");
    }
    return require("./__generated__/userMentionTooltipContainer_repositoryOwner.graphql");
  }
});
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdFJlbGF5IiwiX3Byb3BUeXBlcyIsIl9vY3RpY29uIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJhcmciLCJfdG9QcmltaXRpdmUiLCJTdHJpbmciLCJpbnB1dCIsImhpbnQiLCJwcmltIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJ1bmRlZmluZWQiLCJyZXMiLCJjYWxsIiwiVHlwZUVycm9yIiwiTnVtYmVyIiwiQmFyZVVzZXJNZW50aW9uVG9vbHRpcENvbnRhaW5lciIsIlJlYWN0IiwiQ29tcG9uZW50IiwicmVuZGVyIiwib3duZXIiLCJwcm9wcyIsInJlcG9zaXRvcnlPd25lciIsImxvZ2luIiwiY29tcGFueSIsInJlcG9zaXRvcmllcyIsIm1lbWJlcnNXaXRoUm9sZSIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJhbHQiLCJzcmMiLCJhdmF0YXJVcmwiLCJpY29uIiwidG90YWxDb3VudCIsInN0eWxlIiwiY2xlYXIiLCJleHBvcnRzIiwiUHJvcFR5cGVzIiwic2hhcGUiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwibnVtYmVyIiwiX2RlZmF1bHQiLCJjcmVhdGVGcmFnbWVudENvbnRhaW5lciIsIm5vZGUiLCJoYXNoIiwiY29uc29sZSIsImVycm9yIl0sInNvdXJjZXMiOlsidXNlci1tZW50aW9uLXRvb2x0aXAtY29udGFpbmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2dyYXBocWwsIGNyZWF0ZUZyYWdtZW50Q29udGFpbmVyfSBmcm9tICdyZWFjdC1yZWxheSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgT2N0aWNvbiBmcm9tICcuLi9hdG9tL29jdGljb24nO1xuXG5leHBvcnQgY2xhc3MgQmFyZVVzZXJNZW50aW9uVG9vbHRpcENvbnRhaW5lciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgcmVwb3NpdG9yeU93bmVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgbG9naW46IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICAgIGF2YXRhclVybDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgICAgcmVwb3NpdG9yaWVzOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICB0b3RhbENvdW50OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgICB9KS5pc1JlcXVpcmVkLFxuXG4gICAgICAvLyBVc2Vyc1xuICAgICAgY29tcGFueTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAgICAgLy8gT3JnYW5pemF0aW9uc1xuICAgICAgbWVtYmVyc1dpdGhSb2xlOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICB0b3RhbENvdW50OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgICB9KSxcbiAgICB9KS5pc1JlcXVpcmVkLFxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IG93bmVyID0gdGhpcy5wcm9wcy5yZXBvc2l0b3J5T3duZXI7XG4gICAgY29uc3Qge2xvZ2luLCBjb21wYW55LCByZXBvc2l0b3JpZXMsIG1lbWJlcnNXaXRoUm9sZX0gPSBvd25lcjtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJnaXRodWItVXNlck1lbnRpb25Ub29sdGlwXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2l0aHViLVVzZXJNZW50aW9uVG9vbHRpcC1hdmF0YXJcIj5cbiAgICAgICAgICA8aW1nIGFsdD1cInJlcG9zaXRvcnkgb3duZXIncyBhdmF0YXJcIiBzcmM9e293bmVyLmF2YXRhclVybH0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2l0aHViLVVzZXJNZW50aW9uVG9vbHRpcC1pbmZvXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnaXRodWItVXNlck1lbnRpb25Ub29sdGlwLWluZm8tdXNlcm5hbWVcIj5cbiAgICAgICAgICAgIDxPY3RpY29uIGljb249XCJtZW50aW9uXCIgLz48c3Ryb25nPntsb2dpbn08L3N0cm9uZz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7Y29tcGFueSAmJiA8ZGl2PjxPY3RpY29uIGljb249XCJicmllZmNhc2VcIiAvPjxzcGFuPntjb21wYW55fTwvc3Bhbj48L2Rpdj59XG4gICAgICAgICAge21lbWJlcnNXaXRoUm9sZSAmJiAoXG4gICAgICAgICAgICA8ZGl2PjxPY3RpY29uIGljb249XCJvcmdhbml6YXRpb25cIiAvPjxzcGFuPnttZW1iZXJzV2l0aFJvbGUudG90YWxDb3VudH0gbWVtYmVyczwvc3Bhbj48L2Rpdj5cbiAgICAgICAgICApfVxuICAgICAgICAgIDxkaXY+PE9jdGljb24gaWNvbj1cInJlcG9cIiAvPjxzcGFuPntyZXBvc2l0b3JpZXMudG90YWxDb3VudH0gcmVwb3NpdG9yaWVzPC9zcGFuPjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBzdHlsZT17e2NsZWFyOiAnYm90aCd9fSAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVGcmFnbWVudENvbnRhaW5lcihCYXJlVXNlck1lbnRpb25Ub29sdGlwQ29udGFpbmVyLCB7XG4gIHJlcG9zaXRvcnlPd25lcjogZ3JhcGhxbGBcbiAgICBmcmFnbWVudCB1c2VyTWVudGlvblRvb2x0aXBDb250YWluZXJfcmVwb3NpdG9yeU93bmVyIG9uIFJlcG9zaXRvcnlPd25lciB7XG4gICAgICBsb2dpblxuICAgICAgYXZhdGFyVXJsXG4gICAgICByZXBvc2l0b3JpZXMgeyB0b3RhbENvdW50IH1cbiAgICAgIC4uLiBvbiBVc2VyIHtcbiAgICAgICAgY29tcGFueVxuICAgICAgfVxuICAgICAgLi4uIG9uIE9yZ2FuaXphdGlvbiB7XG4gICAgICAgIG1lbWJlcnNXaXRoUm9sZSB7XG4gICAgICAgICAgdG90YWxDb3VudFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBgLFxufSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFdBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLFVBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFHLFFBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUFzQyxTQUFBRCx1QkFBQUssR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUFBLFNBQUFHLGdCQUFBSCxHQUFBLEVBQUFJLEdBQUEsRUFBQUMsS0FBQSxJQUFBRCxHQUFBLEdBQUFFLGNBQUEsQ0FBQUYsR0FBQSxPQUFBQSxHQUFBLElBQUFKLEdBQUEsSUFBQU8sTUFBQSxDQUFBQyxjQUFBLENBQUFSLEdBQUEsRUFBQUksR0FBQSxJQUFBQyxLQUFBLEVBQUFBLEtBQUEsRUFBQUksVUFBQSxRQUFBQyxZQUFBLFFBQUFDLFFBQUEsb0JBQUFYLEdBQUEsQ0FBQUksR0FBQSxJQUFBQyxLQUFBLFdBQUFMLEdBQUE7QUFBQSxTQUFBTSxlQUFBTSxHQUFBLFFBQUFSLEdBQUEsR0FBQVMsWUFBQSxDQUFBRCxHQUFBLDJCQUFBUixHQUFBLGdCQUFBQSxHQUFBLEdBQUFVLE1BQUEsQ0FBQVYsR0FBQTtBQUFBLFNBQUFTLGFBQUFFLEtBQUEsRUFBQUMsSUFBQSxlQUFBRCxLQUFBLGlCQUFBQSxLQUFBLGtCQUFBQSxLQUFBLE1BQUFFLElB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