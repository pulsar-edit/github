"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _propTypes2 = require("../prop-types");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
class RemoteSelectorView extends _react.default.Component {
  render() {
    const {
      remotes,
      currentBranch,
      selectRemote
    } = this.props;
    // todo: ask Ash how to test this before merging.
    return _react.default.createElement("div", {
      className: "github-RemoteSelector"
    }, _react.default.createElement("div", {
      className: "github-GitHub-LargeIcon icon icon-mirror"
    }), _react.default.createElement("h1", null, "Select a Remote"), _react.default.createElement("div", {
      className: "initialize-repo-description"
    }, _react.default.createElement("span", null, "This repository has multiple remotes hosted at GitHub.com. Select a remote to see pull requests associated with the ", _react.default.createElement("strong", null, currentBranch.getName()), " branch:")), _react.default.createElement("ul", null, Array.from(remotes, remote => _react.default.createElement("li", {
      key: remote.getName()
    }, _react.default.createElement("button", {
      className: "btn btn-primary",
      onClick: e => selectRemote(e, remote)
    }, remote.getName(), " (", remote.getOwner(), "/", remote.getRepo(), ")")))));
  }
}
exports.default = RemoteSelectorView;
_defineProperty(RemoteSelectorView, "propTypes", {
  remotes: _propTypes2.RemoteSetPropType.isRequired,
  currentBranch: _propTypes2.BranchPropType.isRequired,
  selectRemote: _propTypes.default.func.isRequired
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9wcm9wVHlwZXMiLCJfcHJvcFR5cGVzMiIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2RlZmluZVByb3BlcnR5Iiwia2V5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiYXJnIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwiaW5wdXQiLCJoaW50IiwicHJpbSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwidW5kZWZpbmVkIiwicmVzIiwiY2FsbCIsIlR5cGVFcnJvciIsIk51bWJlciIsIlJlbW90ZVNlbGVjdG9yVmlldyIsIlJlYWN0IiwiQ29tcG9uZW50IiwicmVuZGVyIiwicmVtb3RlcyIsImN1cnJlbnRCcmFuY2giLCJzZWxlY3RSZW1vdGUiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJnZXROYW1lIiwiQXJyYXkiLCJmcm9tIiwicmVtb3RlIiwib25DbGljayIsImUiLCJnZXRPd25lciIsImdldFJlcG8iLCJleHBvcnRzIiwiUmVtb3RlU2V0UHJvcFR5cGUiLCJpc1JlcXVpcmVkIiwiQnJhbmNoUHJvcFR5cGUiLCJQcm9wVHlwZXMiLCJmdW5jIl0sInNvdXJjZXMiOlsicmVtb3RlLXNlbGVjdG9yLXZpZXcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCB7UmVtb3RlU2V0UHJvcFR5cGUsIEJyYW5jaFByb3BUeXBlfSBmcm9tICcuLi9wcm9wLXR5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVtb3RlU2VsZWN0b3JWaWV3IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICByZW1vdGVzOiBSZW1vdGVTZXRQcm9wVHlwZS5pc1JlcXVpcmVkLFxuICAgIGN1cnJlbnRCcmFuY2g6IEJyYW5jaFByb3BUeXBlLmlzUmVxdWlyZWQsXG4gICAgc2VsZWN0UmVtb3RlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtyZW1vdGVzLCBjdXJyZW50QnJhbmNoLCBzZWxlY3RSZW1vdGV9ID0gdGhpcy5wcm9wcztcbiAgICAvLyB0b2RvOiBhc2sgQXNoIGhvdyB0byB0ZXN0IHRoaXMgYmVmb3JlIG1lcmdpbmcuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2l0aHViLVJlbW90ZVNlbGVjdG9yXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2l0aHViLUdpdEh1Yi1MYXJnZUljb24gaWNvbiBpY29uLW1pcnJvclwiIC8+XG4gICAgICAgIDxoMT5TZWxlY3QgYSBSZW1vdGU8L2gxPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImluaXRpYWxpemUtcmVwby1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgIDxzcGFuPlRoaXMgcmVwb3NpdG9yeSBoYXMgbXVsdGlwbGUgcmVtb3RlcyBob3N0ZWQgYXQgR2l0SHViLmNvbS5cbiAgICAgICAgICBTZWxlY3QgYSByZW1vdGUgdG8gc2VlIHB1bGwgcmVxdWVzdHMgYXNzb2NpYXRlZFxuICAgICAgICAgIHdpdGggdGhlIDxzdHJvbmc+e2N1cnJlbnRCcmFuY2guZ2V0TmFtZSgpfTwvc3Ryb25nPiBicmFuY2g6PC9zcGFuPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8dWw+XG4gICAgICAgICAge0FycmF5LmZyb20ocmVtb3RlcywgcmVtb3RlID0+IChcbiAgICAgICAgICAgIDxsaSBrZXk9e3JlbW90ZS5nZXROYW1lKCl9PlxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiIG9uQ2xpY2s9e2UgPT4gc2VsZWN0UmVtb3RlKGUsIHJlbW90ZSl9PlxuICAgICAgICAgICAgICAgIHtyZW1vdGUuZ2V0TmFtZSgpfSAoe3JlbW90ZS5nZXRPd25lcigpfS97cmVtb3RlLmdldFJlcG8oKX0pXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsVUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUUsV0FBQSxHQUFBRixPQUFBO0FBQWdFLFNBQUFELHVCQUFBSSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUUsT0FBQSxFQUFBRixHQUFBO0FBQUEsU0FBQUcsZ0JBQUFILEdBQUEsRUFBQUksR0FBQSxFQUFBQyxLQUFBLElBQUFELEdBQUEsR0FBQUUsY0FBQSxDQUFBRixHQUFBLE9BQUFBLEdBQUEsSUFBQUosR0FBQSxJQUFBTyxNQUFBLENBQUFDLGNBQUEsQ0FBQVIsR0FBQSxFQUFBSSxHQUFBLElBQUFDLEtBQUEsRUFBQUEsS0FBQSxFQUFBSSxVQUFBLFFBQUFDLFlBQUEsUUFBQUMsUUFBQSxvQkFBQVgsR0FBQSxDQUFBSSxHQUFBLElBQUFDLEtBQUEsV0FBQUwsR0FBQTtBQUFBLFNBQUFNLGVBQUFNLEdBQUEsUUFBQVIsR0FBQSxHQUFBUyxZQUFBLENBQUFELEdBQUEsMkJBQUFSLEdBQUEsZ0JBQUFBLEdBQUEsR0FBQVUsTUFBQSxDQUFBVixHQUFBO0FBQUEsU0FBQVMsYUFBQUUsS0FBQSxFQUFBQyxJQUFBLGVBQUFELEtBQUEsaUJBQUFBLEtBQUEsa0JBQUFBLEtBQUEsTUFBQUUsSUFBQSxHQUFBRixLQUFBLENBQUFHLE1BQUEsQ0FBQUMsV0FBQSxPQUFBRixJQUFBLEtBQUFHLFNBQUEsUUFBQUMsR0FBQSxHQUFBSixJQUFBLENBQUFLLElBQUEsQ0FBQVAsS0FBQSxFQUFBQyxJQUFBLDJCQUFBSyxHQUFBLHNCQUFBQSxHQUFBLFlBQUFFLFNBQUEsNERBQUFQLElBQUEsZ0JBQUFGLE1BQUEsR0FBQVUsTUFBQSxFQUFBVCxLQUFBO0FBRWpELE1BQU1VLGtCQUFrQixTQUFTQyxjQUFLLENBQUNDLFNBQVMsQ0FBQztFQU85REMsTUFBTUEsQ0FBQSxFQUFHO0lBQ1AsTUFBTTtNQUFDQyxPQUFPO01BQUVDLGFBQWE7TUFBRUM7SUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDQyxLQUFLO0lBQ3pEO0lBQ0EsT0FDRXJDLE1BQUEsQ0FBQU8sT0FBQSxDQUFBK0IsYUFBQTtNQUFLQyxTQUFTLEVBQUM7SUFBdUIsR0FDcEN2QyxNQUFBLENBQUFPLE9BQUEsQ0FBQStCLGFBQUE7TUFBS0MsU0FBUyxFQUFDO0lBQTBDLEVBQUcsRUFDNUR2QyxNQUFBLENBQUFPLE9BQUEsQ0FBQStCLGFBQUEsK0JBQXdCLEVBQ3hCdEMsTUFBQSxDQUFBTyxPQUFBLENBQUErQixhQUFBO01BQUtDLFNBQVMsRUFBQztJQUE2QixHQUMxQ3ZDLE1BQUEsQ0FBQU8sT0FBQSxDQUFBK0IsYUFBQSx1SUFFU3RDLE1BQUEsQ0FBQU8sT0FBQSxDQUFBK0IsYUFBQSxpQkFBU0gsYUFBYSxDQUFDSyxPQUFPLEVBQUUsQ0FBVSxhQUFlLENBQzlELEVBRU54QyxNQUFBLENBQUFPLE9BQUEsQ0FBQStCLGFBQUEsYUFDR0csS0FBSyxDQUFDQyxJQUFJLENBQUNSLE9BQU8sRUFBRVMsTUFBTSxJQUN6QjNDLE1BQUEsQ0FBQU8sT0FBQSxDQUFBK0IsYUFBQTtNQUFJN0IsR0FBRyxFQUFFa0MsTUFBTSxDQUFDSCxPQUFPO0lBQUcsR0FDeEJ4QyxNQUFBLENBQUFPLE9BQUEsQ0FBQStCLGFBQUE7TUFBUUMsU0FBUyxFQUFDLGlCQUFpQjtNQUFDSyxPQUFPLEVBQUVDLENBQUMsSUFBSVQsWUFBWSxDQUFDUyxDQUFDLEVBQUVGLE1BQU07SUFBRSxHQUN2RUEsTUFBTSxDQUFDSCxPQUFPLEVBQUUsUUFBSUcsTUFBTSxDQUFDRyxRQUFRLEVBQUUsT0FBR0gsTUFBTSxDQUFDSSxPQUFPLEVBQUUsTUFDbEQsQ0FFWixDQUFDLENBQ0MsQ0FDRDtFQUVWO0FBQ0Y7QUFBQ0MsT0FBQSxDQUFBekMsT0FBQSxHQUFBdUIsa0JBQUE7QUFBQXRCLGVBQUEsQ0FoQ29Cc0Isa0JBQWtCLGVBQ2xCO0VBQ2pCSSxPQUFPLEVBQUVlLDZCQUFpQixDQUFDQyxVQUFVO0VBQ3JDZixhQUFhLEVBQUVnQiwwQkFBYyxDQUFDRCxVQUFVO0VBQ3hDZCxZQUFZLEVBQUVnQixrQkFBUyxDQUFDQyxJQUFJLENBQUNIO0FBQy9CLENBQUMifQ==