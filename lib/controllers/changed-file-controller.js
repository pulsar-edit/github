"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _multiFilePatchController = _interopRequireDefault(require("./multi-file-patch-controller"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
class ChangedFileController extends _react.default.Component {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "surface", () => this.props.surfaceFileAtPath(this.props.relPath, this.props.stagingStatus));
  }
  render() {
    return _react.default.createElement(_multiFilePatchController.default, _extends({
      surface: this.surface
    }, this.props));
  }
}
exports.default = ChangedFileController;
_defineProperty(ChangedFileController, "propTypes", {
  repository: _propTypes.default.object.isRequired,
  stagingStatus: _propTypes.default.oneOf(['staged', 'unstaged']),
  relPath: _propTypes.default.string.isRequired,
  workspace: _propTypes.default.object.isRequired,
  commands: _propTypes.default.object.isRequired,
  keymaps: _propTypes.default.object.isRequired,
  tooltips: _propTypes.default.object.isRequired,
  config: _propTypes.default.object.isRequired,
  destroy: _propTypes.default.func.isRequired,
  undoLastDiscard: _propTypes.default.func.isRequired,
  surfaceFileAtPath: _propTypes.default.func.isRequired
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9wcm9wVHlwZXMiLCJfbXVsdGlGaWxlUGF0Y2hDb250cm9sbGVyIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfZXh0ZW5kcyIsIk9iamVjdCIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJhcmciLCJfdG9QcmltaXRpdmUiLCJTdHJpbmciLCJpbnB1dCIsImhpbnQiLCJwcmltIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJ1bmRlZmluZWQiLCJyZXMiLCJUeXBlRXJyb3IiLCJOdW1iZXIiLCJDaGFuZ2VkRmlsZUNvbnRyb2xsZXIiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwiYXJncyIsInByb3BzIiwic3VyZmFjZUZpbGVBdFBhdGgiLCJyZWxQYXRoIiwic3RhZ2luZ1N0YXR1cyIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJzdXJmYWNlIiwiZXhwb3J0cyIsInJlcG9zaXRvcnkiLCJQcm9wVHlwZXMiLCJvYmplY3QiLCJpc1JlcXVpcmVkIiwib25lT2YiLCJzdHJpbmciLCJ3b3Jrc3BhY2UiLCJjb21tYW5kcyIsImtleW1hcHMiLCJ0b29sdGlwcyIsImNvbmZpZyIsImRlc3Ryb3kiLCJmdW5jIiwidW5kb0xhc3REaXNjYXJkIl0sInNvdXJjZXMiOlsiY2hhbmdlZC1maWxlLWNvbnRyb2xsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBNdWx0aUZpbGVQYXRjaENvbnRyb2xsZXIgZnJvbSAnLi9tdWx0aS1maWxlLXBhdGNoLWNvbnRyb2xsZXInO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaGFuZ2VkRmlsZUNvbnRyb2xsZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIHJlcG9zaXRvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGFnaW5nU3RhdHVzOiBQcm9wVHlwZXMub25lT2YoWydzdGFnZWQnLCAndW5zdGFnZWQnXSksXG4gICAgcmVsUGF0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXG4gICAgd29ya3NwYWNlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgY29tbWFuZHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBrZXltYXBzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgdG9vbHRpcHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBjb25maWc6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICAgIGRlc3Ryb3k6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgdW5kb0xhc3REaXNjYXJkOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIHN1cmZhY2VGaWxlQXRQYXRoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8TXVsdGlGaWxlUGF0Y2hDb250cm9sbGVyXG4gICAgICAgIHN1cmZhY2U9e3RoaXMuc3VyZmFjZX1cbiAgICAgICAgey4uLnRoaXMucHJvcHN9XG4gICAgICAvPlxuICAgICk7XG4gIH1cblxuICBzdXJmYWNlID0gKCkgPT4gdGhpcy5wcm9wcy5zdXJmYWNlRmlsZUF0UGF0aCh0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