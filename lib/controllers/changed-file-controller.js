"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _multiFilePatchController = _interopRequireDefault(require("./multi-file-patch-controller"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
class ChangedFileController extends _react.default.Component {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "surface", () => this.props.surfaceFileAtPath(this.props.relPath, this.props.stagingStatus));
  }
  render() {
    return _react.default.createElement(_multiFilePatchController.default, _extends({
      surface: this.surface
    }, this.props));
  }
}
exports.default = ChangedFileController;
_defineProperty(ChangedFileController, "propTypes", {
  repository: _propTypes.default.object.isRequired,
  stagingStatus: _propTypes.default.oneOf(['staged', 'unstaged']),
  relPath: _propTypes.default.string.isRequired,
  workspace: _propTypes.default.object.isRequired,
  commands: _propTypes.default.object.isRequired,
  keymaps: _propTypes.default.object.isRequired,
  tooltips: _propTypes.default.object.isRequired,
  config: _propTypes.default.object.isRequired,
  destroy: _propTypes.default.func.isRequired,
  undoLastDiscard: _propTypes.default.func.isRequired,
  surfaceFileAtPath: _propTypes.default.func.isRequired
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9wcm9wVHlwZXMiLCJfbXVsdGlGaWxlUGF0Y2hDb250cm9sbGVyIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfZXh0ZW5kcyIsIk9iamVjdCIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJfZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ0IiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwiciIsImUiLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsIlR5cGVFcnJvciIsIk51bWJlciIsIkNoYW5nZWRGaWxlQ29udHJvbGxlciIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJhcmdzIiwicHJvcHMiLCJzdXJmYWNlRmlsZUF0UGF0aCIsInJlbFBhdGgiLCJzdGFnaW5nU3RhdHVzIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsInN1cmZhY2UiLCJleHBvcnRzIiwicmVwb3NpdG9yeSIsIlByb3BUeXBlcyIsIm9iamVjdCIsImlzUmVxdWlyZWQiLCJvbmVPZiIsInN0cmluZyIsIndvcmtzcGFjZSIsImNvbW1hbmRzIiwia2V5bWFwcyIsInRvb2x0aXBzIiwiY29uZmlnIiwiZGVzdHJveSIsImZ1bmMiLCJ1bmRvTGFzdERpc2NhcmQiXSwic291cmNlcyI6WyJjaGFuZ2VkLWZpbGUtY29udHJvbGxlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IE11bHRpRmlsZVBhdGNoQ29udHJvbGxlciBmcm9tICcuL211bHRpLWZpbGUtcGF0Y2gtY29udHJvbGxlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENoYW5nZWRGaWxlQ29udHJvbGxlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgcmVwb3NpdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YWdpbmdTdGF0dXM6IFByb3BUeXBlcy5vbmVPZihbJ3N0YWdlZCcsICd1bnN0YWdlZCddKSxcbiAgICByZWxQYXRoOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG5cbiAgICB3b3Jrc3BhY2U6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBjb21tYW5kczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGtleW1hcHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICB0b29sdGlwczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGNvbmZpZzogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gICAgZGVzdHJveTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB1bmRvTGFzdERpc2NhcmQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgc3VyZmFjZUZpbGVBdFBhdGg6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxNdWx0aUZpbGVQYXRjaENvbnRyb2xsZXJcbiAgICAgICAgc3VyZmFjZT17dGhpcy5zdXJmYWNlfVxuICAgICAgICB7Li4udGhpcy5wcm9wc31cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxuXG4gIHN1cmZhY2UgPSAoKSA9PiB0aGlzLnByb3BzLnN1cmZhY2VGaWxlQXRQYXRoKHRoaXMucHJvcHMucmVsUGF0aCwgdGhpcy5wcm9wcy5zdGFn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