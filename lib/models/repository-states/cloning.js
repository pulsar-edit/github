"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _fsExtra = _interopRequireDefault(require("fs-extra"));
var _state = _interopRequireDefault(require("./state"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/**
 * Git is asynchronously cloning a repository into this working directory.
 */
class Cloning extends _state.default {
  constructor(repository, remoteUrl, sourceRemoteName) {
    super(repository);
    this.remoteUrl = remoteUrl;
    this.sourceRemoteName = sourceRemoteName;
  }
  async start() {
    await _fsExtra.default.mkdirs(this.workdir());
    await this.doClone(this.remoteUrl, {
      recursive: true,
      sourceRemoteName: this.sourceRemoteName
    });
    await this.transitionTo('Loading');
  }
  showGitTabLoading() {
    return true;
  }
  directClone(remoteUrl, options) {
    return this.git().clone(remoteUrl, options);
  }
}
exports.default = Cloning;
_state.default.register(Cloning);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZnNFeHRyYSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3N0YXRlIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJDbG9uaW5nIiwiU3RhdGUiLCJjb25zdHJ1Y3RvciIsInJlcG9zaXRvcnkiLCJyZW1vdGVVcmwiLCJzb3VyY2VSZW1vdGVOYW1lIiwic3RhcnQiLCJmcyIsIm1rZGlycyIsIndvcmtkaXIiLCJkb0Nsb25lIiwicmVjdXJzaXZlIiwidHJhbnNpdGlvblRvIiwic2hvd0dpdFRhYkxvYWRpbmciLCJkaXJlY3RDbG9uZSIsIm9wdGlvbnMiLCJnaXQiLCJjbG9uZSIsImV4cG9ydHMiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbImNsb25pbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzLWV4dHJhJztcblxuaW1wb3J0IFN0YXRlIGZyb20gJy4vc3RhdGUnO1xuXG4vKipcbiAqIEdpdCBpcyBhc3luY2hyb25vdXNseSBjbG9uaW5nIGEgcmVwb3NpdG9yeSBpbnRvIHRoaXMgd29ya2luZyBkaXJlY3RvcnkuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENsb25pbmcgZXh0ZW5kcyBTdGF0ZSB7XG4gIGNvbnN0cnVjdG9yKHJlcG9zaXRvcnksIHJlbW90ZVVybCwgc291cmNlUmVtb3RlTmFtZSkge1xuICAgIHN1cGVyKHJlcG9zaXRvcnkpO1xuICAgIHRoaXMucmVtb3RlVXJsID0gcmVtb3RlVXJsO1xuICAgIHRoaXMuc291cmNlUmVtb3RlTmFtZSA9IHNvdXJjZVJlbW90ZU5hbWU7XG4gIH1cblxuICBhc3luYyBzdGFydCgpIHtcbiAgICBhd2FpdCBmcy5ta2RpcnModGhpcy53b3JrZGlyKCkpO1xuICAgIGF3YWl0IHRoaXMuZG9DbG9uZSh0aGlzLnJlbW90ZVVybCwge3JlY3Vyc2l2ZTogdHJ1ZSwgc291cmNlUmVtb3RlTmFtZTogdGhpcy5zb3VyY2VSZW1vdGVOYW1lfSk7XG5cbiAgICBhd2FpdCB0aGlzLnRyYW5zaXRpb25UbygnTG9hZGluZycpO1xuICB9XG5cbiAgc2hvd0dpdFRhYkxvYWRpbmcoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBkaXJlY3RDbG9uZShyZW1vdGVVcmwsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5naXQoKS5jbG9uZShyZW1vdGVVcmwsIG9wdGlvbnMpO1xuICB9XG59XG5cblN0YXRlLnJlZ2lzdGVyKENsb25pbmcpO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxNQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBNEIsU0FBQUQsdUJBQUFHLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFFNUI7QUFDQTtBQUNBO0FBQ2UsTUFBTUcsT0FBTyxTQUFTQyxjQUFLLENBQUM7RUFDekNDLFdBQVdBLENBQUNDLFVBQVUsRUFBRUMsU0FBUyxFQUFFQyxnQkFBZ0IsRUFBRTtJQUNuRCxLQUFLLENBQUNGLFVBQVUsQ0FBQztJQUNqQixJQUFJLENBQUNDLFNBQVMsR0FBR0EsU0FBUztJQUMxQixJQUFJLENBQUNDLGdCQUFnQixHQUFHQSxnQkFBZ0I7RUFDMUM7RUFFQSxNQUFNQyxLQUFLQSxDQUFBLEVBQUc7SUFDWixNQUFNQyxnQkFBRSxDQUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDQyxPQUFPLEVBQUUsQ0FBQztJQUMvQixNQUFNLElBQUksQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQ04sU0FBUyxFQUFFO01BQUNPLFNBQVMsRUFBRSxJQUFJO01BQUVOLGdCQUFnQixFQUFFLElBQUksQ0FBQ0E7SUFBZ0IsQ0FBQyxDQUFDO0lBRTlGLE1BQU0sSUFBSSxDQUFDTyxZQUFZLENBQUMsU0FBUyxDQUFDO0VBQ3BDO0VBRUFDLGlCQUFpQkEsQ0FBQSxFQUFHO0lBQ2xCLE9BQU8sSUFBSTtFQUNiO0VBRUFDLFdBQVdBLENBQUNWLFNBQVMsRUFBRVcsT0FBTyxFQUFFO0lBQzlCLE9BQU8sSUFBSSxDQUFDQyxHQUFHLEVBQUUsQ0FBQ0MsS0FBSyxDQUFDYixTQUFTLEVBQUVXLE9BQU8sQ0FBQztFQUM3QztBQUNGO0FBQUNHLE9BQUEsQ0FBQW5CLE9BQUEsR0FBQUMsT0FBQTtBQUVEQyxjQUFLLENBQUNrQixRQUFRLENBQUNuQixPQUFPLENBQUMifQ==