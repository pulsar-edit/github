"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BOTTOM = exports.MIDDLE = exports.TOP = void 0;

class Position {
  constructor(name, cssClass) {
    this.name = name.toLowerCase();
    this.cssClass = cssClass;
  }

  getName() {
    return this.name;
  }

  when(actions) {
    const chosen = actions[this.name] || actions.default || (() => {
      throw new Error(`Unexpected conflict side position: ${this.name}`);
    });

    return chosen();
  }

  getBlockCSSClass() {
    return this.cssClass + 'Block';
  }

  toString() {
    return `<Position: ${this.name.toUpperCase()}>`;
  }

}

const TOP = new Position('TOP', 'github-ConflictTop');
exports.TOP = TOP;
const MIDDLE = new Position('MIDDLE', 'github-ConflictMiddle');
exports.MIDDLE = MIDDLE;
const BOTTOM = new Position('BOTTOM', 'github-ConflictBottom');
exports.BOTTOM = BOTTOM;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9tb2RlbHMvY29uZmxpY3RzL3Bvc2l0aW9uLmpzIl0sIm5hbWVzIjpbIlBvc2l0aW9uIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiY3NzQ2xhc3MiLCJ0b0xvd2VyQ2FzZSIsImdldE5hbWUiLCJ3aGVuIiwiYWN0aW9ucyIsImNob3NlbiIsImRlZmF1bHQiLCJFcnJvciIsImdldEJsb2NrQ1NTQ2xhc3MiLCJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIiwiVE9QIiwiTUlERExFIiwiQk9UVE9NIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBTUEsUUFBTixDQUFlO0FBQ2JDLEVBQUFBLFdBQVcsQ0FBQ0MsSUFBRCxFQUFPQyxRQUFQLEVBQWlCO0FBQzFCLFNBQUtELElBQUwsR0FBWUEsSUFBSSxDQUFDRSxXQUFMLEVBQVo7QUFFQSxTQUFLRCxRQUFMLEdBQWdCQSxRQUFoQjtBQUNEOztBQUVERSxFQUFBQSxPQUFPLEdBQUc7QUFDUixXQUFPLEtBQUtILElBQVo7QUFDRDs7QUFFREksRUFBQUEsSUFBSSxDQUFDQyxPQUFELEVBQVU7QUFDWixVQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxLQUFLTCxJQUFOLENBQVAsSUFBc0JLLE9BQU8sQ0FBQ0UsT0FBOUIsS0FBMEMsTUFBTTtBQUM3RCxZQUFNLElBQUlDLEtBQUosQ0FBVyxzQ0FBcUMsS0FBS1IsSUFBSyxFQUExRCxDQUFOO0FBQ0QsS0FGYyxDQUFmOztBQUdBLFdBQU9NLE1BQU0sRUFBYjtBQUNEOztBQUVERyxFQUFBQSxnQkFBZ0IsR0FBRztBQUNqQixXQUFPLEtBQUtSLFFBQUwsR0FBZ0IsT0FBdkI7QUFDRDs7QUFFRFMsRUFBQUEsUUFBUSxHQUFHO0FBQ1QsV0FBUSxjQUFhLEtBQUtWLElBQUwsQ0FBVVcsV0FBVixFQUF3QixHQUE3QztBQUNEOztBQXhCWTs7QUEyQlIsTUFBTUMsR0FBRyxHQUFHLElBQUlkLFFBQUosQ0FBYSxLQUFiLEVBQW9CLG9CQUFwQixDQUFaOztBQUNBLE1BQU1lLE1BQU0sR0FBRyxJQUFJZixRQUFKLENBQWEsUUFBYixFQUF1Qix1QkFBdkIsQ0FBZjs7QUFDQSxNQUFNZ0IsTUFBTSxHQUFHLElBQUloQixRQUFKLENBQWEsUUFBYixFQUF1Qix1QkFBdkIsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFBvc2l0aW9uIHtcbiAgY29uc3RydWN0b3IobmFtZSwgY3NzQ2xhc3MpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cbiAgICB0aGlzLmNzc0NsYXNzID0gY3NzQ2xhc3M7XG4gIH1cblxuICBnZXROYW1lKCkge1xuICAgIHJldHVybiB0aGlzLm5hbWU7XG4gIH1cblxuICB3aGVuKGFjdGlvbnMpIHtcbiAgICBjb25zdCBjaG9zZW4gPSBhY3Rpb25zW3RoaXMubmFtZV0gfHwgYWN0aW9ucy5kZWZhdWx0IHx8ICgoKSA9PiB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgY29uZmxpY3Qgc2lkZSBwb3NpdGlvbjogJHt0aGlzLm5hbWV9YCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNob3NlbigpO1xuICB9XG5cbiAgZ2V0QmxvY2tDU1NDbGFzcygpIHtcbiAgICByZXR1cm4gdGhpcy5jc3NDbGFzcyArICdCbG9jayc7XG4gIH1cblxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gYDxQb3NpdGlvbjogJHt0aGlzLm5hbWUudG9VcHBlckNhc2UoKX0+YDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgVE9QID0gbmV3IFBvc2l0aW9uKCdUT1AnLCAnZ2l0aHViLUNvbmZsaWN0VG9wJyk7XG5leHBvcnQgY29uc3QgTUlERExFID0gbmV3IFBvc2l0aW9uKCdNSURETEUnLCAnZ2l0aHViLUNvbmZsaWN0TWlkZGxlJyk7XG5leHBvcnQgY29uc3QgQk9UVE9NID0gbmV3IFBvc2l0aW9uKCdCT1RUT00nLCAnZ2l0aHViLUNvbmZsaWN0Qm90dG9tJyk7XG4iXX0=